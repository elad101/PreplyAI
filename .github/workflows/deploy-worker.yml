name: Deploy Worker to Cloud Run

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'apps/worker/**'
      - '.github/workflows/deploy-worker.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production
        default: 'staging'

env:
  GCP_REGION: ${{ secrets.GCP_REGION }}
  SERVICE_NAME: preplyai-worker

jobs:
  deploy:
    name: Deploy Worker
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'production' || 'staging') }}
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Set environment suffix
        id: env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ] || [ "${{ github.event.inputs.environment }}" == "production" ]; then
            echo "suffix=" >> $GITHUB_OUTPUT
            echo "env_name=production" >> $GITHUB_OUTPUT
          else
            echo "suffix=-staging" >> $GITHUB_OUTPUT
            echo "env_name=staging" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/preplyai/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/preplyai/${{ env.SERVICE_NAME }}:latest \
            -f apps/worker/Dockerfile \
            apps/worker

      - name: Push Docker image
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/preplyai/${{ env.SERVICE_NAME }}:${{ github.sha }}
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/preplyai/${{ env.SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }}${{ steps.env.outputs.suffix }} \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/preplyai/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region=${{ env.GCP_REGION }} \
            --platform=managed \
            --allow-unauthenticated=false \
            --set-env-vars="NODE_ENV=${{ steps.env.outputs.env_name }}" \
            --set-env-vars="FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" \
            --set-env-vars="FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" \
            --set-env-vars="FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" \
            --set-env-vars="OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
            --set-env-vars="REDIS_HOST=${{ secrets.REDIS_HOST }}" \
            --set-env-vars="REDIS_PORT=${{ secrets.REDIS_PORT }}" \
            --set-env-vars="REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" \
            --cpu=1 \
            --memory=512Mi \
            --min-instances=1 \
            --max-instances=10 \
            --timeout=300 \
            --concurrency=5

      - name: Deployment summary
        run: |
          echo "### Worker Deployment Complete! ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ steps.env.outputs.env_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.SERVICE_NAME }}${{ steps.env.outputs.suffix }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.GCP_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

